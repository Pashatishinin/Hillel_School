names = [
    {"name": "John", "age": 15},
    {"name": "Jack", "age": 17},
    {"name": "Anton", "age": 39},
    {"name": "Pasha", "age": 54},
    {"name": "Alice", "age": 25},
    {"name": "Mark", "age": 20},
]

print(f"""Изначальный список:
{names[0]}
{names[1]}
{names[2]}
{names[3]}
{names[4]}
{names[5]}""")

"""
а) Создать список и поместить туда имя самого молодого человека.
Если возраст совпадает - поместить все имена самых молодых.
"""

# Сначала выписываем все возраста в один список при помощи цикла
count = []
for element in names:
    count.append(element["age"])

# Циклом проходим опять по списку словарей и ищем какому словарю и ключу соответствует этот возраст
yongest = []
for element in names:
    # При помощи функции min выбираем из списка "count" максимальный возраст
    if element["age"] == min(count):
        # Находим этот словарь и добавляем его в список
        yongest.append(element["name"])

print("_______________")
print("Самый молодой(ая) тут:", yongest)

"""
б) Создать список и поместить туда самое длинное имя. 
Если длина имени совпадает - поместить все такие имена.
"""

name_count = [""]
# Проходим циклом по именам словарей списка и сразу сравниваем их длинну с длинной элемента нового списка
for element in names:
    # Если длинна имени больше чем длинна элемента в списке, то список перезаписывается
    if len(element["name"]) > len(name_count[0]):
        name_count = [element["name"]]
    # Если длинна имени и элемента в списке совпадает, то список дополняется
    elif len(element["name"]) == len(name_count[0]):
        name_count.append(element["name"])

print("_______________")
print("Самые длинные имена:", name_count)

"""
в) Посчитать среднее количество лет всех людей из начального списка.
"""

# Сначала выписываем все возраста в один список при помощи цикла
age = []
for element in names:
    age.append(element["age"])
# вычисляем средний возраст
age = int(sum(age) / len(age))

print("_______________")
print("Средний возраст:", age)
